<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <parent>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter-parent</artifactId>
        <version>2.7.7</version>
        <relativePath/>
    </parent>

    <modelVersion>4.0.0</modelVersion>

    <groupId>org.cynic</groupId>
    <artifactId>jokes-application</artifactId>
    <version>0.0.1-SNAPSHOT</version>
    <packaging>jar</packaging>

    <properties>
        <!--        Generic -->
        <java.version>17</java.version>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>

        <!--        Maven -->
        <maven.plugin.forbiddenapis.version>3.4</maven.plugin.forbiddenapis.version>
        <maven.plugin.jacoco.version>0.8.8</maven.plugin.jacoco.version>
        <maven.plugin.jgitflow.version>1.0-m4.3</maven.plugin.jgitflow.version>
        <maven.plugin.pitest.version>1.10.3</maven.plugin.pitest.version>
        <maven.plugin.pitest.junit5.version>1.1.0</maven.plugin.pitest.junit5.version>
        <maven.plugin.owasp.version>7.4.4</maven.plugin.owasp.version>
        <maven.plugin.spotbugs.version>4.7.3.0</maven.plugin.spotbugs.version>
        <maven.plugin.findsecbugs.version>1.9.0</maven.plugin.findsecbugs.version>
        <maven.plugin.git-build-hook.version>3.3.0</maven.plugin.git-build-hook.version>
        <maven.plugin.spell-check.version>1.0.0</maven.plugin.spell-check.version>
        <maven.plugin.editorconfig.version>0.1.1</maven.plugin.editorconfig.version>
        <maven.plugin.pmd.version>3.19.0</maven.plugin.pmd.version>
        <maven.openapi-generator.version>6.6.0</maven.openapi-generator.version>

        <!--        Libraries -->
        <commons-collections4.version>4.4</commons-collections4.version>
        <mapstruct.version>1.5.5.Final</mapstruct.version>
        <springdoc.version>1.6.14</springdoc.version>
        <spring-cloud.version>3.1.6</spring-cloud.version>
        <feign.version>12.3</feign.version>

        <!--        Testing-->
        <archunit.version>1.0.1</archunit.version>
        <error.prone.version>2.10.0</error.prone.version>
        <instancio.version>2.15.0</instancio.version>
        <wiremock.version>1.58</wiremock.version>
    </properties>


    <dependencies>
        <!--        Source -->
        <dependency>
            <groupId>org.apache.commons</groupId>
            <artifactId>commons-collections4</artifactId>
            <version>${commons-collections4.version}</version>
        </dependency>
        <dependency>
            <groupId>org.mapstruct</groupId>
            <artifactId>mapstruct</artifactId>
            <version>${mapstruct.version}</version>
        </dependency>
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-context-indexer</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-configuration-processor</artifactId>
        </dependency>
        <dependency>
            <groupId>org.codehaus.janino</groupId>
            <artifactId>janino</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-validation</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-web</artifactId>
            <exclusions>
                <exclusion>
                    <groupId>org.springframework.boot</groupId>
                    <artifactId>spring-boot-starter-tomcat</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-jetty</artifactId>
            <exclusions>
                <exclusion>
                    <groupId>org.eclipse.jetty.websocket</groupId>
                    <artifactId>websocket-server</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>org.eclipse.jetty.websocket</groupId>
                    <artifactId>javax-websocket-server-impl</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>jakarta.websocket</groupId>
                    <artifactId>jakarta.websocket-api</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>org.apache.tomcat.embed</groupId>
                    <artifactId>tomcat-embed-el</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
        <dependency>
            <groupId>org.springdoc</groupId>
            <artifactId>springdoc-openapi-ui</artifactId>
            <version>${springdoc.version}</version>
        </dependency>
        <dependency>
            <groupId>org.springframework.cloud</groupId>
            <artifactId>spring-cloud-commons</artifactId>
            <version>${spring-cloud.version}</version>
            <exclusions>
                <exclusion>
                    <groupId>org.springframework.security</groupId>
                    <artifactId>spring-security-crypto</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
        <dependency>
            <groupId>org.springframework.cloud</groupId>
            <artifactId>spring-cloud-context</artifactId>
            <version>${spring-cloud.version}</version>
            <exclusions>
                <exclusion>
                    <groupId>org.springframework.security</groupId>
                    <artifactId>spring-security-crypto</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
        <dependency>
            <groupId>io.github.openfeign</groupId>
            <artifactId>feign-core</artifactId>
            <version>${feign.version}</version>
        </dependency>
        <dependency>
            <groupId>io.github.openfeign</groupId>
            <artifactId>feign-slf4j</artifactId>
            <version>${feign.version}</version>
        </dependency>
        <dependency>
            <groupId>org.springframework.cloud</groupId>
            <artifactId>spring-cloud-openfeign-core</artifactId>
            <version>${spring-cloud.version}</version>
            <exclusions>
                <exclusion>
                    <groupId>commons-fileupload</groupId>
                    <artifactId>commons-fileupload</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
        <dependency>
            <groupId>jakarta.annotation</groupId>
            <artifactId>jakarta.annotation-api</artifactId>
        </dependency>

        <!--        Testing -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-test</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.junit.jupiter</groupId>
            <artifactId>junit-jupiter-engine</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.mockito</groupId>
            <artifactId>mockito-junit-jupiter</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.assertj</groupId>
            <artifactId>assertj-core</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>com.tngtech.archunit</groupId>
            <artifactId>archunit-junit5-engine</artifactId>
            <version>${archunit.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.instancio</groupId>
            <artifactId>instancio-junit</artifactId>
            <version>${instancio.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>io.rest-assured</groupId>
            <artifactId>rest-assured</artifactId>
            <exclusions>
                <exclusion>
                    <groupId>com.sun.xml.bind</groupId>
                    <artifactId>jaxb-osgi</artifactId>
                </exclusion>
            </exclusions>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>com.github.tomakehurst</groupId>
            <artifactId>wiremock</artifactId>
            <version>${wiremock.version}</version>
            <scope>test</scope>
        </dependency>
    </dependencies>

    <build>
        <plugins>
            <plugin>
                <groupId>org.openapitools</groupId>
                <artifactId>openapi-generator-maven-plugin</artifactId>
                <version>${maven.openapi-generator.version}</version>
                <configuration>
                    <enablePostProcessFile>true</enablePostProcessFile>
                    <verbose>false</verbose>
                    <addCompileSourceRoot>true</addCompileSourceRoot>
                    <templateDirectory>api/templates</templateDirectory>
                    <generatorName>spring</generatorName>
                    <library>spring-cloud</library>
                    <generateSupportingFiles>false</generateSupportingFiles>
                    <generateApiTests>false</generateApiTests>
                    <generateModelTests>false</generateModelTests>
                    <generateApiDocumentation>false</generateApiDocumentation>
                    <generateModelDocumentation>false</generateModelDocumentation>
                </configuration>
                <executions>
                    <execution>
                        <id>generate-client</id>
                        <phase>generate-sources</phase>
                        <goals>
                            <goal>generate</goal>
                        </goals>
                        <configuration>
                            <groupId>chuck-norris</groupId>
                            <inputSpec>api/chuck-norris.json</inputSpec>
                            <invokerPackage>org.cynic.jokes.client.chuck_norris.client</invokerPackage>
                            <apiPackage>org.cynic.jokes.client.chuck_norris.api</apiPackage>
                            <modelPackage>org.cynic.jokes.client.chuck_norris.domain</modelPackage>
                            <configOptions>
                                <useResponseEntity>false</useResponseEntity>
                                <hideGenerationTimestamp>true</hideGenerationTimestamp>
                                <openApiNullable>false</openApiNullable>
                                <dateLibrary>java8</dateLibrary>
                                <java8>true</java8>
                                <useBeanValidation>false</useBeanValidation>
                                <useSwaggerUI>false</useSwaggerUI>
                                <requestMappingMode>api_interface</requestMappingMode>
                                <serializableModel>true</serializableModel>
                                <configPackage>org.cynic.jokes.client.chuck_norris.configuration</configPackage>
                            </configOptions>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

            <plugin>
                <groupId>org.ec4j.maven</groupId>
                <artifactId>editorconfig-maven-plugin</artifactId>
                <version>${maven.plugin.editorconfig.version}</version>
                <configuration>
                    <failOnNoMatchingProperties>true</failOnNoMatchingProperties>
                    <failOnFormatViolation>true</failOnFormatViolation>
                    <encoding>${project.build.sourceEncoding}</encoding>
                </configuration>
                <executions>
                    <execution>
                        <id>check</id>
                        <phase>validate</phase>
                        <goals>
                            <goal>format</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>com.github.tomxiong</groupId>
                <artifactId>spell-check-maven-plugin</artifactId>
                <version>${maven.plugin.spell-check.version}</version>
                <configuration>
                    <excludes>
                        <exclude>**/*Test.java</exclude>
                        <exclude>**/*IT.java</exclude>
                    </excludes>
                    <customDictionaryFile>domain-dictionary.txt</customDictionaryFile>
                </configuration>
                <executions>
                    <execution>
                        <id>spell-check</id>
                        <phase>validate</phase>
                        <goals>
                            <goal>check</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-pmd-plugin</artifactId>
                <version>${maven.plugin.pmd.version}</version>
                <configuration>
                    <linkXRef>false</linkXRef>
                    <failOnViolation>true</failOnViolation>
                    <printFailingErrors>true</printFailingErrors>
                    <excludeRoots>
                        <excludeRoot>target/generated-sources</excludeRoot>
                    </excludeRoots>
                </configuration>
                <dependencies>
                    <dependency>
                        <groupId>org.ow2.asm</groupId>
                        <artifactId>asm</artifactId>
                        <version>LATEST</version>
                    </dependency>
                </dependencies>
                <executions>
                    <execution>
                        <id>pmd-scan</id>
                        <phase>compile</phase>
                        <goals>
                            <goal>check</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>com.rudikershaw.gitbuildhook</groupId>
                <artifactId>git-build-hook-maven-plugin</artifactId>
                <version>${maven.plugin.git-build-hook.version}</version>
                <configuration>
                    <gitConfig>
                        <commit.template>.gittemplate</commit.template>
                    </gitConfig>
                </configuration>
                <executions>
                    <execution>
                        <phase>validate</phase>
                        <goals>
                            <goal>configure</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.pitest</groupId>
                <artifactId>pitest-maven</artifactId>
                <version>${maven.plugin.pitest.version}</version>
                <configuration>
                    <verbose>false</verbose>
                    <mutationThreshold>80</mutationThreshold>
                    <timestampedReports>false</timestampedReports>
                    <jvmArgs>
                        <jvmArg>-Xshare:off</jvmArg>
                    </jvmArgs>
                    <targetClasses>
                        <param>org.cynic.jokes.**</param>
                    </targetClasses>
                    <targetTests>
                        <param>org.cynic.jokes.**</param>
                    </targetTests>
                    <excludedClasses>
                        <param>org.cynic.jokes.client.**</param>
                        <param>org.cynic.jokes.Configuration*</param>
                        <param>org.cynic.jokes.Application*</param>
                        <param>org.cynic.jokes.Constant*</param>
                        <param>org.cynic.jokes.domain.**</param>
                        <param>org.cynic.jokes.framework.**</param>
                    </excludedClasses>
                    <excludedTestClasses>
                        <param>org.cynic.jokes.architecture.**</param>
                        <param>org.cynic.jokes.e2e.**</param>
                    </excludedTestClasses>
                </configuration>
                <executions>
                    <execution>
                        <id>pit-maven</id>
                        <phase>test</phase>
                        <goals>
                            <goal>mutationCoverage</goal>
                        </goals>
                    </execution>
                </executions>
                <dependencies>
                    <dependency>
                        <groupId>org.pitest</groupId>
                        <artifactId>pitest-junit5-plugin</artifactId>
                        <version>${maven.plugin.pitest.junit5.version}</version>
                    </dependency>
                </dependencies>
            </plugin>
            <plugin>
                <groupId>com.github.spotbugs</groupId>
                <artifactId>spotbugs-maven-plugin</artifactId>
                <version>${maven.plugin.spotbugs.version}</version>
                <configuration>
                    <fork>false</fork>
                    <plugins>
                        <plugin>
                            <groupId>com.h3xstream.findsecbugs</groupId>
                            <artifactId>findsecbugs-plugin</artifactId>
                            <version>${maven.plugin.findsecbugs.version}</version>
                        </plugin>
                    </plugins>
                    <excludeFilterFile>spotbugs-exclude.xml</excludeFilterFile>
                </configuration>
                <executions>
                    <execution>
                        <id>on-compile</id>
                        <phase>compile</phase>
                        <goals>
                            <goal>check</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <artifactId>maven-surefire-plugin</artifactId>
                <configuration>
                    <argLine>-Xmx2048m -Xss1m -Dfile.encoding=${project.build.sourceEncoding}
                        ${jacoco.agent.argLine}
                    </argLine>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.jacoco</groupId>
                <artifactId>jacoco-maven-plugin</artifactId>
                <version>${maven.plugin.jacoco.version}</version>
                <configuration>
                    <rules>
                        <rule>
                            <element>CLASS</element>
                            <limits>
                                <limit>
                                    <counter>CLASS</counter>
                                    <value>MISSEDCOUNT</value>
                                    <maximum>0</maximum>
                                </limit>
                                <limit>
                                    <counter>LINE</counter>
                                    <value>COVEREDRATIO</value>
                                    <minimum>0.80</minimum>
                                </limit>
                                <limit>
                                    <counter>BRANCH</counter>
                                    <value>COVEREDRATIO</value>
                                    <minimum>0.80</minimum>
                                </limit>
                            </limits>
                        </rule>
                    </rules>
                    <propertyName>jacoco.agent.argLine</propertyName>
                    <excludes>
                        <exclude>**/Constant*</exclude>
                        <exclude>**/Application*</exclude>
                        <exclude>**/Configuration*</exclude>
                        <exclude>**/domain/**</exclude>
                        <exclude>**/framework/**</exclude>
                        <exclude>**/client/**</exclude>
                    </excludes>
                </configuration>
                <executions>
                    <execution>
                        <id>prepare-arguments</id>
                        <goals>
                            <goal>prepare-agent</goal>
                        </goals>
                    </execution>
                    <execution>
                        <id>test-coverage</id>
                        <phase>test</phase>
                        <goals>
                            <goal>check</goal>
                            <goal>report</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>pl.project13.maven</groupId>
                <artifactId>git-commit-id-plugin</artifactId>
                <configuration>
                    <verbose>false</verbose>
                    <failOnUnableToExtractRepoInfo>false</failOnUnableToExtractRepoInfo>
                    <generateGitPropertiesFile>false</generateGitPropertiesFile>
                </configuration>
            </plugin>
            <plugin>
                <artifactId>maven-jar-plugin</artifactId>
                <configuration>
                    <archive>
                        <addMavenDescriptor>false</addMavenDescriptor>
                        <manifestEntries>
                            <Implementation-Version>${git.build.version}-${git.commit.id.abbrev}
                            </Implementation-Version>
                        </manifestEntries>
                    </archive>
                </configuration>
            </plugin>
            <plugin>
                <artifactId>maven-compiler-plugin</artifactId>
                <configuration>
                    <fork>true</fork>
                    <compilerArgs>
                        <arg>-XDcompilePolicy=simple</arg>
                        <arg>-Xplugin:ErrorProne</arg>
                        <arg>-Xlint:all</arg>
                        <arg>-J--add-exports=jdk.compiler/com.sun.tools.javac.api=ALL-UNNAMED</arg>
                        <arg>-J--add-exports=jdk.compiler/com.sun.tools.javac.file=ALL-UNNAMED</arg>
                        <arg>-J--add-exports=jdk.compiler/com.sun.tools.javac.main=ALL-UNNAMED</arg>
                        <arg>-J--add-exports=jdk.compiler/com.sun.tools.javac.model=ALL-UNNAMED</arg>
                        <arg>-J--add-exports=jdk.compiler/com.sun.tools.javac.parser=ALL-UNNAMED</arg>
                        <arg>-J--add-exports=jdk.compiler/com.sun.tools.javac.processing=ALL-UNNAMED</arg>
                        <arg>-J--add-exports=jdk.compiler/com.sun.tools.javac.tree=ALL-UNNAMED</arg>
                        <arg>-J--add-exports=jdk.compiler/com.sun.tools.javac.util=ALL-UNNAMED</arg>
                        <arg>-J--add-opens=jdk.compiler/com.sun.tools.javac.code=ALL-UNNAMED</arg>
                        <arg>-J--add-opens=jdk.compiler/com.sun.tools.javac.comp=ALL-UNNAMED</arg>
                    </compilerArgs>
                    <annotationProcessorPaths>
                        <path>
                            <groupId>com.google.errorprone</groupId>
                            <artifactId>error_prone_core</artifactId>
                            <version>${error.prone.version}</version>
                        </path>
                        <path>
                            <groupId>org.springframework.boot</groupId>
                            <artifactId>spring-boot-configuration-processor</artifactId>
                            <version>LATEST</version>
                        </path>
                        <path>
                            <groupId>org.mapstruct</groupId>
                            <artifactId>mapstruct-processor</artifactId>
                            <version>${mapstruct.version}</version>
                        </path>
                    </annotationProcessorPaths>
                </configuration>
            </plugin>
            <plugin>
                <artifactId>maven-failsafe-plugin</artifactId>
                <configuration>
                    <argLine>-Xmx2048m -Xss1m -XX:+ShowCodeDetailsInExceptionMessages
                        -Dfile.encoding=${project.build.sourceEncoding} -Dliquibase.hub.mode=off
                    </argLine>
                </configuration>
            </plugin>

            <plugin>
                <groupId>de.thetaphi</groupId>
                <artifactId>forbiddenapis</artifactId>
                <version>${maven.plugin.forbiddenapis.version}</version>
                <configuration>
                    <bundledSignatures>
                        <bundledSignature>jdk-unsafe</bundledSignature>
                        <bundledSignature>jdk-deprecated</bundledSignature>
                        <bundledSignature>jdk-system-out</bundledSignature>
                        <bundledSignature>jdk-internal</bundledSignature>
                        <bundledSignature>jdk-non-portable</bundledSignature>
                        <bundledSignature>jdk-reflection</bundledSignature>
                    </bundledSignatures>
                    <targetVersion>${java.version}</targetVersion>
                    <testTargetVersion>${java.version}</testTargetVersion>
                </configuration>
                <executions>
                    <execution>
                        <id>on-compile</id>
                        <phase>compile</phase>
                        <goals>
                            <goal>check</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.owasp</groupId>
                <artifactId>dependency-check-maven</artifactId>
                <version>${maven.plugin.owasp.version}</version>
                <executions>
                    <execution>
                        <id>maven-owasp</id>
                        <phase>validate</phase>
                        <goals>
                            <goal>check</goal>
                        </goals>
                    </execution>
                </executions>
                <configuration>
                    <failBuildOnAnyVulnerability>true</failBuildOnAnyVulnerability>
                    <suppressionFile>owasp-suppression.xml</suppressionFile>
                    <jarAnalyzerEnabled>true</jarAnalyzerEnabled>
                    <pyDistributionAnalyzerEnabled>false</pyDistributionAnalyzerEnabled>
                    <pyPackageAnalyzerEnabled>false</pyPackageAnalyzerEnabled>
                    <rubygemsAnalyzerEnabled>false</rubygemsAnalyzerEnabled>
                    <opensslAnalyzerEnabled>false</opensslAnalyzerEnabled>
                    <cmakeAnalyzerEnabled>false</cmakeAnalyzerEnabled>
                    <autoconfAnalyzerEnabled>false</autoconfAnalyzerEnabled>
                    <composerAnalyzerEnabled>false</composerAnalyzerEnabled>
                    <nodeAnalyzerEnabled>false</nodeAnalyzerEnabled>
                    <nodeAuditAnalyzerEnabled>false</nodeAuditAnalyzerEnabled>
                    <retireJsAnalyzerEnabled>false</retireJsAnalyzerEnabled>
                    <nuspecAnalyzerEnabled>false</nuspecAnalyzerEnabled>
                    <nugetconfAnalyzerEnabled>false</nugetconfAnalyzerEnabled>
                    <cocoapodsAnalyzerEnabled>false</cocoapodsAnalyzerEnabled>
                    <bundleAuditAnalyzerEnabled>false</bundleAuditAnalyzerEnabled>
                    <swiftPackageManagerAnalyzerEnabled>false
                    </swiftPackageManagerAnalyzerEnabled>
                    <assemblyAnalyzerEnabled>false</assemblyAnalyzerEnabled>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-enforcer-plugin</artifactId>
                <configuration>
                    <fail>true</fail>
                    <rules>
                        <requireJavaVersion>
                            <version>${java.version}</version>
                        </requireJavaVersion>
                        <banDuplicatePomDependencyVersions/>
                        <bannedDependencies>
                            <excludes>
                                <exclude>junit:junit</exclude>
                                <exclude>junit:junit-dep</exclude>
                            </excludes>
                        </bannedDependencies>
                        <requireMavenVersion>
                            <version>3.5</version>
                        </requireMavenVersion>
                        <requireReleaseDeps/>
                    </rules>
                </configuration>
                <executions>
                    <execution>
                        <id>enforce-maven</id>
                        <phase>compile</phase>
                        <goals>
                            <goal>enforce</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>versions-maven-plugin</artifactId>
            </plugin>
            <plugin>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
                <configuration>
                    <executable>true</executable>
                </configuration>
            </plugin>
        </plugins>
    </build>
</project>